{
  "version": 4,
  "terraform_version": "1.9.3",
  "serial": 7,
  "lineage": "e9827a00-96dd-ab95-5b20-2f00e3935738",
  "outputs": {},
  "resources": [
    {
      "module": "module.microservices",
      "mode": "managed",
      "type": "random_password",
      "name": "microservices_random_service_passwords",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "index_key": "grafana_password",
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$5jC73YUZbB/aUOjcxTkMg.i/QaUeCvaUibb6rKPeTGWYxiubSCAla",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": "#$%\u0026",
            "result": "0IL%LhbjfhVl1MbV",
            "special": true,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.microservices.module.kind_cluster",
      "mode": "managed",
      "type": "kind_cluster",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDITCCAgmgAwIBAgIIYh09tDcl8YwwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDA5MTkwMjEzNDlaFw0yNTA5MTkwMjEzNTJaMDQx\nFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJzMRkwFwYDVQQDExBrdWJlcm5ldGVzLWFk\nbWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAteC9ThC+bDb/rM6A\nC3sOHwlgsbES+7zLXn0ohE0ZddEJIvpFXBmjzPWdmgyWCRJBhVr7I7zon65K3iJQ\nfYi65fYBoiPT9llpzBK2brS5ZnStAjd9jIxWvIpE1yUeqCDnGnmysSdUGZWy7ff7\nZe8bpTR7vYTO3mmNHXTGgVQgGKqRkEy5KHdSZNZidfOlwv+qRmVOPC14oKhlOoXn\nTw/cBB9LUlP4JS/svb0JUnOdft+KSHLD2wnajalDgwwDQ/Qt59fHt3dVU6stv4pP\nJ0Pl6IVAM1+UH+JywKAo6HaT9Q/Ctr1VfZTCAbMLxiPmhBQOgmEjLe89vNnuZ32w\nS+e2+QIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQqdBGpiDz7RjikjHZ3goUvrMhD\n1DANBgkqhkiG9w0BAQsFAAOCAQEAi++f14dkfdTyBaL2I9BNG/XbdYP6K/IWz9Bm\nRxGVZdZALUZVzn3yIVCz5fsKbDr+Agf8F6AXmElBuCvHFWOnQBYqK2j/00muiuAJ\nMHwhtEZEPE7lga7a4Fg7/MF7lvUfTfUpmZiu3OxBgV4SSO+c41aY3KggCRX67wwk\nwLmw/mtVQzwbnJ/Bxk1Hm8ed3ng6SzRD0i4SSPpOKzufJqslP/Lj3ACMkPCw7pFF\nlTnwVhc3cFVaEbLwBZ6kAS0EeeujDGfTwH/hiPj2KeX78135AWvEW0NsplpdSkmw\nBqJ0fxXI4FL/B4pgisN2R4feCqpA96Srzm8V7elTxNhSeK80lA==\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAteC9ThC+bDb/rM6AC3sOHwlgsbES+7zLXn0ohE0ZddEJIvpF\nXBmjzPWdmgyWCRJBhVr7I7zon65K3iJQfYi65fYBoiPT9llpzBK2brS5ZnStAjd9\njIxWvIpE1yUeqCDnGnmysSdUGZWy7ff7Ze8bpTR7vYTO3mmNHXTGgVQgGKqRkEy5\nKHdSZNZidfOlwv+qRmVOPC14oKhlOoXnTw/cBB9LUlP4JS/svb0JUnOdft+KSHLD\n2wnajalDgwwDQ/Qt59fHt3dVU6stv4pPJ0Pl6IVAM1+UH+JywKAo6HaT9Q/Ctr1V\nfZTCAbMLxiPmhBQOgmEjLe89vNnuZ32wS+e2+QIDAQABAoIBAQCYP0S4MHP2iiOE\nOGgfNCch++uhUyUc7XEf640bEp8ZbJ5FVVLyQdRIIeKHrbl6ZnnKc9p+lAf2gyPQ\nxtCyBN7O2RuM6ojoUvipB5EHIul/xnN8w46pNGD2+pedsUj0XHaYRv86JD3WHOXn\nJgqfzYRKyqA6iQ3SSHEEE1iHsjAb9GGET7XssZsUX/GaJffzp/z3dn12byYp5HVo\nqW2Q5Wic/1XsUqPr/YBrN9vAYEZbKE9zATfftlTcVWA9kk14qgu8bIv8edTK7IMF\nyBkhXOP/jjvPXkwy/CUTHWDwg9RrelE8OVMEgeK4P6+MaxS3ga+4klvcDRAcgTpu\nCut4PabBAoGBAMRz2ZG58e+dGctXiXxtI88GYN0a/chVlnVbkSXyxrxtezTS7QvC\nt2WwuNghWkbSaFxwpMeHXYAuc76F66ZmA+d4whQxfx62Ms8NI/Um3o2uc1/ITWTi\n/wNSUUitbQtxRnc7tvyjcMh7xmZYBBDfStbpoxnzUwptFVZZ/J7FrEXFAoGBAO0B\n8FWb1/H+K5+QieuxlRK+6MZorExL1396w5kgBNZVQVn1Aw+OpVeLFUt0DX3kmXl1\n/kdu6jVdM46Rtk8KXXx6bqQxqrUb59BN459DW+S4r/8nNh41cG+HFa8X+r7kJP7+\nz7KNB0B2JAJ1omVR9IGrlcDjXMYN0Nf3rXxaHrOlAoGAHfzhNVGBEOaWTWfrYMb4\nNF3w409/ddk6wmdb3MMWeyTrLcEU1jq+7BLx5GwS78SmkZXQUXTkXPC6Ulb3BcuE\nxQy184cqtHFziA+lcYKhblc23WQiDEhqTQN/zOxMPPbpnsHKyP3Z9YCPZIgC9uBe\n+Ddp4kg2YN0N6MSLv2DFT1ECgYEAsWFnFxtZJkMdMQIDR0QUFwCMxJnogf2tHjqq\nE3tUQ3lxPLtT/Bu9gWSVnnAP/O3PM4lsste/MAs+H/DMKiHOz+/tyLNnWL624z64\nIiVOrELRbbxSE4/ZQ48tWmsu/hlP2wyoM7C7AbKpxrF1xjDtNvNNVByV/aCvckNr\nMwtbuQUCgYEArAGnNfVYO4ULd+SCDcbUGNJ0erddIwiDWjjzvds/sxSirv1X0w9j\nBa6jpvIE0z0JvA2ghLhMNh5EmOcjFcQ4X5a2HSWArAnTLg8e9+gAOnx5SBm95x2f\nbbYaW6Yh142s+7k8hCDAmAy/axEmqj1SBUI6xcCu1MhgXikf4bo2Cu0=\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTI0MDkxOTAyMTM0OVoXDTM0MDkxNzAyMTM0OVowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL3t\nazJnHn4U/FN2TjR/+tefcJxmjCw3Okx660J1D4Rh94xVjEp8uloema40vJcXANm7\no3zsgvQUAy9SDeK0GKNa4g/ucOaXoZTIjS3+okL6OMf6cKoWoXngTQVrXBxrlZsP\natOydjqGjvRqi8bxe/Rvyy/q5X5JoG38QZMUPEsyAbmi+HhMgdXI0QuVW+9BhLFR\nPsvTWnskb88aeG4s4KcOeM+yju2h1BKY1IKQNZ88+XwQwKf4eV2jSCQhd1O15Ta+\n+k3/cZQ7fB45zQeznD20RXCyvA6iWGzNTIn8LUAPAVtRpH2kmHO4GH42ooQguXF/\nPpW7TGnaOV6NxUov4rsCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFCp0EamIPPtGOKSMdneChS+syEPUMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAI2D1EyLnDP029NNWgZ4\nx78HMduXvSHMmnji7ctaKZo9tvqwj1I1uZ0aqhgylPZ8vVLXFFP5TINpERTU5BJ9\n7WOo+6x3KUyV3DdarRKGj1GxSAE07oxXhCJRBnsotJroXmWX8BLyRzQOnSFymtsr\ngHzyQDLHYhuHU09s33cHsZ0IKMXpJ+tm0oaGDcNoawLnKVH7nOxXt9he6+6fqu9r\nXE4XKzwS6OFVlRLGwF5yzsKBYp0w0ulCzkyvXHTQMlyh1uXJQjy0cNVsXSXZFqEZ\n6Jpk3Ji5sEqV+FhMT3RkK6MF/F5ONVjfyzo1NCrwQvZVQmS86Ha99NZic4TUVqaA\n9EU=\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:59275",
            "id": "microservices-development-cluster-kindest/node:v1.27.1",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": null,
                "feature_gates": null,
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [
                      {
                        "container_port": 80,
                        "host_port": 80,
                        "listen_address": "",
                        "protocol": ""
                      },
                      {
                        "container_port": 443,
                        "host_port": 443,
                        "listen_address": "",
                        "protocol": ""
                      }
                    ],
                    "image": "",
                    "kubeadm_config_patches": [
                      "kind: InitConfiguration\nnodeRegistration:\n  kubeletExtraArgs:\n    node-labels: \"ingress-ready=true\"\n"
                    ],
                    "labels": null,
                    "role": "control-plane"
                  }
                ],
                "runtime_config": null
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJME1Ea3hPVEF5TVRNME9Wb1hEVE0wTURreE56QXlNVE0wT1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDN0CmF6Sm5IbjRVL0ZOMlRqUi8rdGVmY0p4bWpDdzNPa3g2NjBKMUQ0Umg5NHhWakVwOHVsb2VtYTQwdkpjWEFObTcKbzN6c2d2UVVBeTlTRGVLMEdLTmE0Zy91Y09hWG9aVElqUzMrb2tMNk9NZjZjS29Xb1huZ1RRVnJYQnhybFpzUAphdE95ZGpxR2p2UnFpOGJ4ZS9Sdnl5L3E1WDVKb0czOFFaTVVQRXN5QWJtaStIaE1nZFhJMFF1VlcrOUJoTEZSClBzdlRXbnNrYjg4YWVHNHM0S2NPZU0reWp1MmgxQktZMUlLUU5aODgrWHdRd0tmNGVWMmpTQ1FoZDFPMTVUYSsKK2szL2NaUTdmQjQ1elFlem5EMjBSWEN5dkE2aVdHek5USW44TFVBUEFWdFJwSDJrbUhPNEdINDJvb1FndVhGLwpQcFc3VEduYU9WNk54VW92NHJzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDcDBFYW1JUFB0R09LU01kbmVDaFMrc3lFUFVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSTJEMUV5TG5EUDAyOU5OV2daNAp4NzhITWR1WHZTSE1tbmppN2N0YUtabzl0dnF3ajFJMXVaMGFxaGd5bFBaOHZWTFhGRlA1VElOcEVSVFU1Qko5CjdXT28rNngzS1V5VjNEZGFyUktHajFHeFNBRTA3b3hYaENKUkJuc290SnJvWG1XWDhCTHlSelFPblNGeW10c3IKZ0h6eVFETEhZaHVIVTA5czMzY0hzWjBJS01YcEordG0wb2FHRGNOb2F3TG5LVkg3bk94WHQ5aGU2KzZmcXU5cgpYRTRYS3p3UzZPRlZsUkxHd0Y1eXpzS0JZcDB3MHVsQ3preXZYSFRRTWx5aDF1WEpRankwY05Wc1hTWFpGcUVaCjZKcGszSmk1c0VxVitGaE1UM1JrSzZNRi9GNU9OVmpmeXpvMU5DcndRdlpWUW1TODZIYTk5TlppYzRUVVZxYUEKOUVVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://127.0.0.1:59275\n  name: kind-microservices-development-cluster\ncontexts:\n- context:\n    cluster: kind-microservices-development-cluster\n    user: kind-microservices-development-cluster\n  name: kind-microservices-development-cluster\ncurrent-context: kind-microservices-development-cluster\nkind: Config\npreferences: {}\nusers:\n- name: kind-microservices-development-cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJWWgwOXREY2w4WXd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBNU1Ua3dNakV6TkRsYUZ3MHlOVEE1TVRrd01qRXpOVEphTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRlQzlUaEMrYkRiL3JNNkEKQzNzT0h3bGdzYkVTKzd6TFhuMG9oRTBaZGRFSkl2cEZYQm1qelBXZG1neVdDUkpCaFZyN0k3em9uNjVLM2lKUQpmWWk2NWZZQm9pUFQ5bGxwekJLMmJyUzVablN0QWpkOWpJeFd2SXBFMXlVZXFDRG5Hbm15c1NkVUdaV3k3ZmY3ClplOGJwVFI3dllUTzNtbU5IWFRHZ1ZRZ0dLcVJrRXk1S0hkU1pOWmlkZk9sd3YrcVJtVk9QQzE0b0tobE9vWG4KVHcvY0JCOUxVbFA0SlMvc3ZiMEpVbk9kZnQrS1NITEQyd25hamFsRGd3d0RRL1F0NTlmSHQzZFZVNnN0djRwUApKMFBsNklWQU0xK1VIK0p5d0tBbzZIYVQ5US9DdHIxVmZaVENBYk1MeGlQbWhCUU9nbUVqTGU4OXZObnVaMzJ3ClMrZTIrUUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRcWRCR3BpRHo3Umppa2pIWjNnb1V2ck1oRAoxREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaSsrZjE0ZGtmZFR5QmFMMkk5Qk5HL1hiZFlQNksvSVd6OUJtClJ4R1ZaZFpBTFVaVnpuM3lJVkN6NWZzS2JEcitBZ2Y4RjZBWG1FbEJ1Q3ZIRldPblFCWXFLMmovMDBtdWl1QUoKTUh3aHRFWkVQRTdsZ2E3YTRGZzcvTUY3bHZVZlRmVXBtWml1M094QmdWNFNTTytjNDFhWTNLZ2dDUlg2N3d3awp3TG13L210VlF6d2JuSi9CeGsxSG04ZWQzbmc2U3pSRDBpNFNTUHBPS3p1Zkpxc2xQL0xqM0FDTWtQQ3c3cEZGCmxUbndWaGMzY0ZWYUViTHdCWjZrQVMwRWVldWpER2ZUd0gvaGlQajJLZVg3ODEzNUFXdkVXME5zcGxwZFNrbXcKQnFKMGZ4WEk0RkwvQjRwZ2lzTjJSNGZlQ3FwQTk2U3J6bThWN2VsVHhOaFNlSzgwbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGVDOVRoQytiRGIvck02QUMzc09Id2xnc2JFUys3ekxYbjBvaEUwWmRkRUpJdnBGClhCbWp6UFdkbWd5V0NSSkJoVnI3STd6b242NUszaUpRZllpNjVmWUJvaVBUOWxscHpCSzJiclM1Wm5TdEFqZDkKakl4V3ZJcEUxeVVlcUNEbkdubXlzU2RVR1pXeTdmZjdaZThicFRSN3ZZVE8zbW1OSFhUR2dWUWdHS3FSa0V5NQpLSGRTWk5aaWRmT2x3ditxUm1WT1BDMTRvS2hsT29YblR3L2NCQjlMVWxQNEpTL3N2YjBKVW5PZGZ0K0tTSExECjJ3bmFqYWxEZ3d3RFEvUXQ1OWZIdDNkVlU2c3R2NHBQSjBQbDZJVkFNMStVSCtKeXdLQW82SGFUOVEvQ3RyMVYKZlpUQ0FiTUx4aVBtaEJRT2dtRWpMZTg5dk5udVozMndTK2UyK1FJREFRQUJBb0lCQVFDWVAwUzRNSFAyaWlPRQpPR2dmTkNjaCsrdWhVeVVjN1hFZjY0MGJFcDhaYko1RlZWTHlRZFJJSWVLSHJibDZabm5LYzlwK2xBZjJneVBRCnh0Q3lCTjdPMlJ1TTZvam9VdmlwQjVFSEl1bC94bk44dzQ2cE5HRDIrcGVkc1VqMFhIYVlSdjg2SkQzV0hPWG4KSmdxZnpZUkt5cUE2aVEzU1NIRUVFMWlIc2pBYjlHR0VUN1hzc1pzVVgvR2FKZmZ6cC96M2RuMTJieVlwNUhWbwpxVzJRNVdpYy8xWHNVcVByL1lCck45dkFZRVpiS0U5ekFUZmZ0bFRjVldBOWtrMTRxZ3U4Ykl2OGVkVEs3SU1GCnlCa2hYT1Avamp2UFhrd3kvQ1VUSFdEd2c5UnJlbEU4T1ZNRWdlSzRQNitNYXhTM2dhKzRrbHZjRFJBY2dUcHUKQ3V0NFBhYkJBb0dCQU1SejJaRzU4ZStkR2N0WGlYeHRJODhHWU4wYS9jaFZsblZia1NYeXhyeHRlelRTN1F2Qwp0Mld3dU5naFdrYlNhRnh3cE1lSFhZQXVjNzZGNjZabUErZDR3aFF4Zng2Mk1zOE5JL1VtM28ydWMxL0lUV1RpCi93TlNVVWl0YlF0eFJuYzd0dnlqY01oN3htWllCQkRmU3RicG94bnpVd3B0RlZaWi9KN0ZyRVhGQW9HQkFPMEIKOEZXYjEvSCtLNStRaWV1eGxSSys2TVpvckV4TDEzOTZ3NWtnQk5aVlFWbjFBdytPcFZlTEZVdDBEWDNrbVhsMQova2R1NmpWZE00NlJ0azhLWFh4NmJxUXhxclViNTlCTjQ1OURXK1M0ci84bk5oNDFjRytIRmE4WCtyN2tKUDcrCno3S05CMEIySkFKMW9tVlI5SUdybGNEalhNWU4wTmYzclh4YUhyT2xBb0dBSGZ6aE5WR0JFT2FXVFdmcllNYjQKTkYzdzQwOS9kZGs2d21kYjNNTVdleVRyTGNFVTFqcSs3Qkx4NUd3Uzc4U21rWlhRVVhUa1hQQzZVbGIzQmN1RQp4UXkxODRjcXRIRnppQStsY1lLaGJsYzIzV1FpREVocVRRTi96T3hNUFBicG5zSEt5UDNaOVlDUFpJZ0M5dUJlCitEZHA0a2cyWU4wTjZNU0x2MkRGVDFFQ2dZRUFzV0ZuRnh0WkprTWRNUUlEUjBRVUZ3Q014Sm5vZ2YydEhqcXEKRTN0VVEzbHhQTHRUL0J1OWdXU1ZubkFQL08zUE00bHNzdGUvTUFzK0gvRE1LaUhPeisvdHlMTm5XTDYyNHo2NApJaVZPckVMUmJieFNFNC9aUTQ4dFdtc3UvaGxQMnd5b003QzdBYktweHJGMXhqRHROdk5OVkJ5Vi9hQ3Zja05yCk13dGJ1UVVDZ1lFQXJBR25OZlZZTzRVTGQrU0NEY2JVR05KMGVyZGRJd2lEV2pqenZkcy9zeFNpcnYxWDB3OWoKQmE2anB2SUUwejBKdkEyZ2hMaE1OaDVFbU9jakZjUTRYNWEySFNXQXJBblRMZzhlOStnQU9ueDVTQm05NXgyZgpiYllhVzZZaDE0MnMrN2s4aENEQW1BeS9heEVtcWoxU0JVSTZ4Y0N1MU1oZ1hpa2Y0Ym8yQ3UwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n",
            "kubeconfig_path": "/work/microservices-development-cluster-config",
            "name": "microservices-development-cluster",
            "node_image": "kindest/node:v1.27.1",
            "timeouts": null,
            "wait_for_ready": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.microservices.module.kind_ingress",
      "mode": "managed",
      "type": "null_resource",
      "name": "apply_kubectl",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3981384805679285577",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.microservices.module.kind_cluster.kind_cluster.default"
          ]
        }
      ]
    },
    {
      "module": "module.microservices.module.kube_prometheus_stack",
      "mode": "managed",
      "type": "helm_release",
      "name": "kube_prometheus_stack",
      "provider": "module.microservices.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kube-prometheus-stack",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.76.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1726712077,
                "last_deployed": 1726712077,
                "name": "kube-prometheus-stack",
                "namespace": "microservices",
                "notes": "1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace microservices kube-prometheus-stack-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   kube-prometheus-stack-grafana.microservices.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace microservices -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prometheus-stack\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace microservices port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace microservices get pods -l \"release=kube-prometheus-stack\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace microservices -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=kube-prometheus-stack\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace microservices $POD_NAME 9100\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, kube-prometheus-stack-kube-state-metrics.microservices.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 1,
                "values": "{\"alertmanager\":{\"enabled\":true},\"grafana\":{\"adminPassword\":\"MyPassword1222@\"},\"server\":{\"persistentVolume\":{\"enabled\":true,\"size\":\"1Gi\"}}}",
                "version": "62.3.1"
              }
            ],
            "name": "kube-prometheus-stack",
            "namespace": "microservices",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "alertmanager.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "grafana.adminPassword",
                "type": "",
                "value": "MyPassword1222@"
              },
              {
                "name": "server.persistentVolume.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.persistentVolume.size",
                "type": "",
                "value": "1Gi"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "62.3.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.microservices.module.kind_cluster.kind_cluster.default",
            "module.microservices.module.kind_ingress.null_resource.apply_kubectl",
            "module.microservices.module.kubernetes_namespace.kubernetes_namespace.microservices",
            "module.microservices.random_password.microservices_random_service_passwords"
          ]
        }
      ]
    },
    {
      "module": "module.microservices.module.kube_prometheus_stack",
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "kube_prometheus_stack_ingress",
      "provider": "module.microservices.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "microservices/kube-prometheus-stack-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/rewrite-target": "/"
                },
                "generate_name": "",
                "generation": 1,
                "labels": null,
                "name": "kube-prometheus-stack-ingress",
                "namespace": "microservices",
                "resource_version": "1168",
                "uid": "0eb435b7-1d31-4905-9238-5a463f592b14"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "",
                "rule": [
                  {
                    "host": "prometheus.devops.com",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "kube-prometheus-stack-prometheus",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 9090
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "host": "grafana.devops.com",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "kube-prometheus-stack-grafana",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 80
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.microservices.module.kind_cluster.kind_cluster.default",
            "module.microservices.module.kind_ingress.null_resource.apply_kubectl",
            "module.microservices.module.kube_prometheus_stack.helm_release.kube_prometheus_stack",
            "module.microservices.module.kubernetes_namespace.kubernetes_namespace.microservices",
            "module.microservices.random_password.microservices_random_service_passwords"
          ]
        }
      ]
    },
    {
      "module": "module.microservices.module.kubernetes_namespace",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "microservices",
      "provider": "module.microservices.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "microservices",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "microservices",
                "resource_version": "531",
                "uid": "8989221d-eb80-408b-9dad-09bb6cb05a26"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.microservices.module.kind_cluster.kind_cluster.default",
            "module.microservices.module.kind_ingress.null_resource.apply_kubectl"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
